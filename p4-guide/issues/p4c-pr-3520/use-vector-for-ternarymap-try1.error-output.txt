use-vector-for-ternarymap-try1.p4(12): [--Wwarn=mismatch] warning: 16w0xffffff: value does not fit in 16 bits
            {{5, 0xffffff}, 10}, // ternary key with value 5, mask 0xffffff (exact match on least significant 24 bits), value 10
                 ^^^^^^^^
use-vector-for-ternarymap-try1.p4(13): [--Wwarn=mismatch] warning: 16w0xffffff: value does not fit in 16 bits
            {{6, 0xffffff}, 27}, // ternary key with value 6, mask 0xffffff, value 27
                 ^^^^^^^^
use-vector-for-ternarymap-try1.p4(17): [--Werror=type-error] error: c.t1
    t1;
    ^^
  ---- Actual error:
  use-vector-for-ternarymap-try1.p4(11): Cannot unify type 'Vector<struct tuple_1>' with type 'Vector<tuple<tuple<bit<16>, bit<16>>, bit<32>>>'
          const_entries = [tuple<tuple<bit<16>,bit<16>>,bit<32>>;
                          ^
  use-vector-for-ternarymap-try1.p4(4)
      TernaryMap(int size, Vector<tuple<tuple<K,K>,V>> const_entries, V default_value);
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  ---- Originating from:
  use-vector-for-ternarymap-try1.p4(11): Type of argument 'const_entries = VectorExpression' (Vector<struct tuple_1>) does not match type of parameter 'const_entries' (Vector<tuple<tuple<bit<16>, bit<16>>, bit<32>>>)
          const_entries = [tuple<tuple<bit<16>,bit<16>>,bit<32>>;
          ^^^^^^^^^^^^^
  use-vector-for-ternarymap-try1.p4(11)
          const_entries = [tuple<tuple<bit<16>,bit<16>>,bit<32>>;
                          ^
  use-vector-for-ternarymap-try1.p4(4)
      TernaryMap(int size, Vector<tuple<tuple<K,K>,V>> const_entries, V default_value);
                                                       ^^^^^^^^^^^^^
  use-vector-for-ternarymap-try1.p4(4)
      TernaryMap(int size, Vector<tuple<tuple<K,K>,V>> const_entries, V default_value);
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  ---- Originating from:
  use-vector-for-ternarymap-try1.p4(17): Constructor invocation <Method call> does not match constructor declaration TernaryMap
      t1;
      ^^
  use-vector-for-ternarymap-try1.p4(4)
      TernaryMap(int size, Vector<tuple<tuple<K,K>,V>> const_entries, V default_value);
      ^^^^^^^^^^
